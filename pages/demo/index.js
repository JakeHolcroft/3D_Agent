import Head from 'next/head'
import { Inter } from '@next/font/google'
import { Canvas, useFrame} from '@react-three/fiber'
import { useGLTF, OrbitControls, PerspectiveCamera } from '@react-three/drei'
import { useRef, useEffect, useState} from 'react'
import Link from 'next/link'


export default function demo() {

  const [camera1Enable, setCamera1Enable] = useState(false);
  const [camera2Enable, setCamera2Enable] = useState(false);
  const [camera3Enable, setCamera3Enable] = useState(false);
  const [camera4Enable, setCamera4Enable] = useState(false);

  const [positionC, setPositionC] = useState("0, -80, 522.72");
  const [rotationC, setRotationC] = useState("0.25, 0, 0");

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className='relative' id="canvas-container">
        <Canvas>
          <ambientLight intensity={0.2} />
          <directionalLight color="red" position={[0, 0, 5]} />
          <mesh>
            <AgentModel posC={positionC} rotC={rotationC} camera1={camera1Enable} camera2={camera2Enable} camera3={camera3Enable} camera4={camera4Enable}/>
          </mesh>
        </Canvas>


        <div className='z-[999] absolute bottom-[0px] w-[100vw] bg-red-500/50 h-[70px]'>
          
          <button onClick={() => {
             setPositionC("0, -80, 522.72")
             setRotationC("0.25, 0, 0")
          }} 
          className='bg-white p-3 rounded-lg mx-3 mt-3'>Camera 1.</button>
          <button onClick={() => {
             setPositionC("333.49, 48.14, 130.03")
             setRotationC("0.05, 1.27, -0.04")

          }}  className='bg-white p-3 rounded-lg mx-3 mt-3'>Camera 2.</button>
          <button onClick={() => {
             setPositionC("-299.52, 33.32, 282.3")
             setRotationC("0.09, -0.7, 0.06")


          }}  className='bg-white p-3 rounded-lg mx-3 mt-3'>Camera 3.</button>
          <button onClick={() => {
             setPositionC("0, 51, 733")
             setRotationC("0, 0, 0")
          }}  className='bg-white p-3 rounded-lg mx-3 mt-3'>Camera 4.</button>


<button className='bg-yellow-200 float-right p-3 rounded-lg mx-3 mt-3 font-bold'><Link href="/demo">Animated</Link></button>
        <button className='bg-yellow-200 float-right p-3 rounded-lg mx-3 mt-3 '><Link href="/">Unanimated</Link></button>

          </div>
      </div>
    </>
  )
}


export function AgentModel(props) {
  const ref = useRef();


  const { nodes, materials } = useGLTF("/Agent (1).gltf");



return (
  <group {...props} dispose={null}>
    
    {/* default camera */}
    <PerspectiveCamera
      makeDefault={true}
      far={10000000000}
      near={0.01}
      fov={50}
    //   position={props.posC.split(",")}
    position={props.posC.split(",")}
      rotation={props.rotC.split(",")}
    />


    <mesh
      castShadow
      receiveShadow
      geometry={nodes.SuperText_Plus.geometry}
      material={materials.Mat}
      position={[0, 55, 0]}
    />
  </group>
);
}

useGLTF.preload("/Agent (1).gltf");


